[{"name": "app.py", "content": "import plotly.express as px\nfrom shiny.express import input, ui\nfrom shinywidgets import render_plotly\nfrom shiny import render, reactive\nfrom palmerpenguins import load_penguins\nimport seaborn as sns\n\n# Use the built-in function to load the Palmer Penguins dataset\npenguins = load_penguins()\n\nui.page_opts(title=\"Palmer Penguin's Data: Josiah Randleman\", fillable=True)\n\nwith ui.sidebar(bg=\"#f8f8f8\", open=\"open\"):\n    ui.h2(\"Sidebar\")\n\n    # Dropdown for selecting the attribute to display in the histogram\n    # Setting default value to 'bill_length_mm'\n    ui.input_selectize(\n        \"selected_attribute\",\n        \"Choose A Selected Attribute:\",\n        [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n        multiple=False,\n    )\n\n    ui.input_numeric(\"plotly_bin_count\", \"Plotly Histogram Bins:\", 10)\n\n    ui.input_slider(\"seaborn_bin_count\", \"Seaborn Bins:\", min=0, max=100, value=25)\n\n    ui.input_checkbox_group(\n        \"selected_species_list\",\n        \"Choose Species:\",\n        [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n        selected=[\"Adelie\"],\n        inline=False,\n    )\n\n    ui.hr()\n\n    ui.a(\"GitHub\", href=\"https://github.com/jrandl/cintel-02-data\", target=\"_blank\")\n\nwith ui.navset_card_underline():\n    with ui.nav_panel(\"DataTable\"):\n\n        @render.data_frame\n        def penguins_DataTable():\n            return render.DataTable(penguins)\n\n    with ui.nav_panel(\"DataGrid\"):\n\n        @render.data_frame\n        def penguins_DataGrid():\n            return render.DataGrid(penguins)\n\n\nwith ui.navset_card_underline():\n    with ui.nav_panel(\"Plotly Histogram\"):\n\n        @render_plotly\n        def Plotly_Histogram():\n            return px.histogram(\n                data_frame=filtered_data(),\n                x=input.selected_attribute(),\n                nbins=input.plotly_bin_count(),\n                color=\"species\",\n            )\n\n    with ui.nav_panel(\"Seaborn Histogram\"):\n\n        @render.plot(alt=\"A Seaborn histogram on penguin body mass in grams.\")\n        def Seaborn_Histogram():\n            return sns.histplot(\n                data=filtered_data(),\n                x=input.selected_attribute(),\n                bins=input.seaborn_bin_count(),\n                hue=\"species\",\n            )\n\n    with ui.nav_panel(\"Plotly Scatterplot\"):\n\n        @render_plotly\n        def Plotly_Scatterplot():\n            return px.scatter(\n                filtered_data(),\n                x=input.selected_attribute(),\n                y=\"body_mass_g\",\n                color=\"species\",\n                title=\"Plotly Scatterplot: Species\",\n                labels={\"bill_length_mm\": \"Bill Length\", \"body_mass_g\": \"Body Mass\"},\n                size_max=5,\n            )\n\n\n# --------------------------------------------------------\n# Reactive calculations and effects\n# --------------------------------------------------------\n\n# Add a reactive calculation to filter the data\n# By decorating the function with @reactive, we can use the function to filter the data\n# The function will be called whenever an input functions used to generate that output changes.\n# Any output that depends on the reactive function (e.g., filtered_data()) will be updated when the data changes.\n\n@reactive.calc\ndef filtered_data():\n    isSpeciesMatch = penguins[\"species\"].isin(input.selected_species_list())\n    return penguins[isSpeciesMatch]\n", "type": "text"}]